/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import * as tslib_1 from "tslib";
import * as msRest from "@azure/ms-rest-js";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import * as Parameters from "./models/parameters";
import * as operations from "./operations";
import { ResourceGraphClientContext } from "./resourceGraphClientContext";
var ResourceGraphClient = /** @class */ (function (_super) {
    tslib_1.__extends(ResourceGraphClient, _super);
    /**
     * Initializes a new instance of the ResourceGraphClient class.
     * @param credentials Credentials needed for the client to connect to Azure.
     * @param [options] The parameter options
     */
    function ResourceGraphClient(credentials, options) {
        var _this = _super.call(this, credentials, options) || this;
        _this.operations = new operations.Operations(_this);
        return _this;
    }
    ResourceGraphClient.prototype.resources = function (query, options, callback) {
        return this.sendOperationRequest({
            query: query,
            options: options
        }, resourcesOperationSpec, callback);
    };
    return ResourceGraphClient;
}(ResourceGraphClientContext));
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var resourcesOperationSpec = {
    httpMethod: "POST",
    path: "providers/Microsoft.ResourceGraph/resources",
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "query",
        mapper: tslib_1.__assign({}, Mappers.QueryRequest, { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.QueryResponse
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
export { ResourceGraphClient, ResourceGraphClientContext, Models as ResourceGraphModels, Mappers as ResourceGraphMappers };
export * from "./operations";
//# sourceMappingURL=resourceGraphClient.js.map