/**
 * Makerel API
 * This is part of Makerel API.
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/// <reference types="node" />
import http = require('http');
import { ApiResponse } from '../model/apiResponse';
import { HostResponse } from '../model/hostResponse';
import { HostStatusRequest } from '../model/hostStatusRequest';
import { HostsResponse } from '../model/hostsResponse';
import { Authentication } from '../model/models';
import { ApiKeyAuth } from '../model/models';
export declare enum HostApiApiKeys {
    apiKey = 0
}
export declare class HostApi {
    protected _basePath: string;
    protected defaultHeaders: any;
    protected _useQuerystring: boolean;
    protected authentications: {
        'default': Authentication;
        'apiKey': ApiKeyAuth;
    };
    constructor(basePath?: string);
    useQuerystring: boolean;
    basePath: string;
    setDefaultAuthentication(auth: Authentication): void;
    setApiKey(key: HostApiApiKeys, value: string): void;
    /**
     *
     * @param hostId
     */
    getHost(hostId: string, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: HostResponse;
    }>;
    /**
     *
     * @param service optional サービス名。
     * @param role サービス内のロール名。複数指定可能（結果は各ロールに所属するホスト群の和集合となります）。serviceが指定されていない場合は無効です。
     * @param name optional ホスト名。
     * @param status optional ホストのステータスを絞り込む。複数指定可能。デフォルトは working と standbyです。
     * @param customIdentifier optional ホスト情報の登録やホスト情報の更新で登録したユーザー独自の識別子。
     */
    getHosts(service?: string, role?: string, name?: string, status?: string, customIdentifier?: string, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: HostsResponse;
    }>;
    /**
     *
     * @param hostId
     * @param hostStatus
     */
    postHostStatus(hostId: string, hostStatus: HostStatusRequest, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: ApiResponse;
    }>;
}
